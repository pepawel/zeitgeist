#!/usr/bin/env ruby
# frozen_string_literal: true

require 'pathname'

class LoaderGenerator
  def call
    File.open(loader_path, 'w') do |file|
      file.puts <<~HEADER
        # frozen_string_literal: true

        # File generated automatically, do not edit

      HEADER
      yield.each do |auto_loader|
        auto_loader.on_load do |_cpath, _value, abspath|
          next if abspath !~ /.rb$/i # skip directories

          file.puts "require '#{path_to_requirement(abspath)}'"
        end
        auto_loader.eager_load
      end
    end
  end

  private

  def path_to_requirement(abspath)
    relative_path_from(loader_dir, abspath).sub(/.rb$/i, '')
  end

  def relative_path_from(base_dir, target_path)
    target = Pathname.new(target_path)
    base = Pathname.new(base_dir)
    target.relative_path_from(base).to_s
  end

  attr_reader :loader_path, :loader_dir

  def initialize(loader_path)
    @loader_path = loader_path
    @loader_dir = File.dirname(loader_path)
  end
end

require 'bundler/setup'

loader_path = File.join(__dir__, '..', 'lib', 'basic_loader.rb')
generator = LoaderGenerator.new(loader_path)
generator.call do
  require 'zeitgeist'
  Zeitgeist::AUTOLOADERS
end
